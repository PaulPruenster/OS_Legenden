1. Permissions:
    x - stands for execute
    r - stands for read
    w - stands for write
    If the first char is a 'd', that indicates that it is a directory and not a file. 

2. The first three chars represent the permissions of the current user. If a user has permissions, it doesn't provide information about the privileges from other users. 
   If a group has a certain privilege, every user, which belongs to it, has the permissions, which were assigned to this file to this group.
   'User' = owner/creator of the file 


3. rwx 
   If there is a "-" instead of a char, then this user/group hasn't got the permissions for it. 
   'r' = read
   'w' = write
   'x' = execute
   
4. Permissions are encoded as 3 Bits, so basically 111. 644
    6 = 110 = rw- 
    4 = 100 = r--

5. You change this by using chmod +permission or by a number. The permissions are represented by 3 bits (111), so if you want to give all privileges to a user/group you would do this by  running chmod 7 (7 = 111).

6. chmod -r <digit(s)> -r stands for recursive. 

7. umask returns the current standard permissions in octal.
   If you add -S, it will return it as a string. 

8. You can work with permissions, so that no one expects you can see the file(s).

9. You could use unique names or use a different path. 


